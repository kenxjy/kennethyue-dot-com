---
import Icon from './Icon.astro';
---

<theme-toggle>
  <button
    class="flex cursor-pointer rounded-full bg-gray-50 p-0 shadow-[inset_0_0_0_2px] shadow-primary dark:bg-gray-950"
  >
    <span class="sr-only">Dark theme</span>
    <span
      class="before:content[''] transition-color relative z-10 flex h-[2rem] w-[2rem] p-2 text-[1rem] text-overlay xjy-transition before:absolute before:inset-0 before:-z-10 before:rounded-full before:bg-primary before:transition-transform before:xjy-transition dark:text-primary dark:before:translate-x-full"
      ><Icon icon="sun" /></span
    >
    <span
      class="transition-color relative z-10 flex h-[2rem] w-[2rem] p-2 text-[1rem] text-primary xjy-transition dark:text-overlay"
      ><Icon icon="moon-stars" /></span
    >
  </button>
</theme-toggle>

<style></style>

<script>
  class ThemeToggle extends HTMLElement {
    constructor() {
      super();

      const button = this.querySelector('button')!;

      /** Set the theme to dark/light mode. */
      const setTheme = (dark: boolean) => {
        document.documentElement.classList[dark ? 'add' : 'remove'](
          'theme-dark'
        );
        button.setAttribute('aria-pressed', String(dark));
      };

      // Toggle the theme when a user clicks the button.
      button.addEventListener('click', () => setTheme(!this.isDark()));

      // Initialize button state to reflect current theme.
      setTheme(this.isDark());
    }

    isDark() {
      return document.documentElement.classList.contains('theme-dark');
    }
  }
  customElements.define('theme-toggle', ThemeToggle);
</script>

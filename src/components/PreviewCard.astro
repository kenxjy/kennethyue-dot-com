---
import type { CollectionEntry } from 'astro:content';
import ActionButton from './ActionButton.astro';

interface Props {
  project: CollectionEntry<'work'>;
}

const { data, slug } = Astro.props.project;
---

<div class="card">
  <span class="title">{data.title}</span>
  <img src={data.img} alt={data.img_alt || ''} loading="lazy" decoding="async" />
  <div class="subtext-container">
    {
      data.role && (
        <div class="subtext">
          {data.role}
          {data.timeText && (
            <span class="time-text">
              <br />
              {data.timeText}
            </span>
          )}
        </div>
      )
    }
  </div>
  {
    data.description ? (
      <div class="description-container gap-2">
        <p class="description">{data.description}</p>
        <div class="description-read-more">
          <ActionButton
            href={`/work/${slug}`}
            lgFontSize="var(--text-base)"
            fontSize="var(--text-base)"
            smFontSize="var(--text-sm)"
            size="small"
          >
            Read More
          </ActionButton>
        </div>
      </div>
    ) : (
      <a class="overlay-link" href={`/work/${slug}`} />
    )
  }
</div>

<!-- <a class="card" href={`/work/${slug}`}>
	<span class="title">{data.title}</span>
	<img src={data.img} alt={data.img_alt || ''} loading="lazy" decoding="async" />
</a> -->

<style>
  .overlay-link {
    grid-area: 1 / 1 / 4 / 4;
  }

  .description-container {
    opacity: 0;
    z-index: 2;
    grid-area: 1 / 1 / 4 / 4;
    transition: opacity var(--theme-transition);
    overflow-y: hidden;
    display: grid;
    grid-template: 1fr auto / auto;
    padding: 2rem;
    padding-bottom: 0.5rem;
    background: hsla(0, 0%, 20%, 0.7);
    border: 0px solid var(--gray-800);
    border-radius: 0.75rem;
  }

  .description {
    z-index: 3;
    height: max-content;
    max-height: 100%;
    overflow-y: auto;
    overflow-x: hidden;
    color: var(--gray-200);
    padding: 0.5rem;
    background: var(--gray-999);
    border: 1px solid var(--gray-800);
    border-radius: 0.75rem;
    align-self: center;
  }

  .card {
    display: grid;
    grid-template: auto 1fr auto / auto 1fr auto;
    height: 22rem;
    background: var(--gradient-subtle);
    border: 1px solid var(--gray-800);
    border-radius: 0.75rem;
    overflow: hidden;
    box-shadow: var(--shadow-sm);
    transition: box-shadow var(--theme-transition);
  }

  .card:hover {
    box-shadow: var(--shadow-md);
  }

  .card:hover > .description-container {
    opacity: 100;
    transition: opacity var(--theme-transition);
  }

  .title {
    grid-area: 1 / 1 / 2 / 2;
    z-index: 1;
    margin: 0.5rem;
    padding: 0.5rem 1rem;
    background: var(--gray-999);
    color: var(--gray-200);
    border: 1px solid var(--gray-800);
    border-radius: 0.75rem;
    text-decoration: none;
    font-family: var(--font-brand);
    font-size: var(--text-lg);
    font-weight: 500;
  }

  .subtext-container {
    grid-area: 3 / 1 / 3 / span 3;
    padding: 0.5rem;
    display: flex;
    flex-direction: row-reverse;
  }

  .subtext {
    padding: 0.25rem 0.5rem;
    background: var(--gray-999);
    color: var(--gray-200);
    border: 1px solid var(--gray-800);
    border-radius: 0.75rem;
    z-index: 1;
    text-align: end;
    font-size: var(--text-sm);
  }

  .time-text {
    font-style: italic;
    color: var(--accent-dark);
  }

  img {
    grid-area: 1 / 1 / 4 / 4;
    width: 100%;
    height: 100%;
    object-fit: cover;
  }

  @media (min-width: 50em) {
    .card {
      border-radius: 1.5rem;
    }

    .title {
      border-radius: 0.9375rem;
    }
  }
</style>
